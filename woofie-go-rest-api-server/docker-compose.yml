version: "3"

services:
  app:
    container_name: go-woofie-api
    build:
      context: . # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    volumes:
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 8081:4000
    restart: unless-stopped

  graphql-engine:
    image: hasura/graphql-engine:v2.0.5
    ports:
      - 8080:8080
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:meowoof!@172.17.0.1:22032/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      ## set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: meowoof!
      ##
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"RS256","jwk_url": "https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com", "audience": "meowoof-da693", "issuer": "https://securetoken.google.com/meowoof-da693"}'

  minio1:
    image: minio/minio
    container_name: minio1
    ports:
      - 9001:9000
      - 9003:9001
    volumes:
      - ../storage/data1-1:/data1
      - ../storage/data1-2:/data2
    command: server --console-address ":9001" http://minio{1...2}/data{1...2}
    env_file:
      - ./minio.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # minio2:
  #   image: minio/minio
  #   container_name: minio2
  #   ports:
  #     - 9002:9000
  #     - 9004:9001
  #   volumes:
  #     - ../storage/data2-1:/data1
  #     - ../storage/data2-2:/data2
  #   command: server --console-address ":9001" http://minio{1...2}/data{1...2}
  #   env_file:
  #     - ./minio.env
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  #     interval: 30s
  #     timeout: 20s
  #     retries: 3

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 22030:9000
    depends_on:
      - minio1
      # - minio2

  postgres:
    image: postgres:12
    restart: always
    ports:
      - 22033:5432
    volumes:
      - ../db_data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      POSTGRES_PASSWORD: meowoof!

#  redis:
#    image: "redis:alpine3.13"
#    environment:
#      - ALLOW_EMPTY_PASSWORD=yes

#Creating the network
#cmd: sudo docker network create woofie

volumes:
  db_data:
  data1-1:
  data1-2:
  # data2-1:
  # data2-2:
networks:
  default:
    external:
      name: woofie
